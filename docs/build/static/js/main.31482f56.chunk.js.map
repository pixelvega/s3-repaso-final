{"version":3,"sources":["components/Filter.js","components/PaletteCard.js","components/PalettesList.js","components/PaletteDetail.js","App.js","services/palettesService.js","index.js"],"names":["Filter","react_default","a","createElement","className","type","onKeyUp","this","props","action","Component","PaletteCard","_this$props","name","colors","map","color","index","style","backgroundColor","concat","key","PalettesList","myPalettes","item","id","Link","to","components_PaletteCard","PaletteDetail","paletteId","match","params","length","palette","react","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","nameFilter","palettes","getNameFilter","bind","assertThisInitialized","getSavedPalettes","e","query","currentTarget","value","setState","localStorage","getItem","mySavedPalettes","JSON","parse","getPalettes","data","dataName","setItem","stringify","_this2","fetch","then","res","json","newPalettes","objectSpread","savePalettes","_this$state","filter","toUpperCase","includes","_this3","Switch","Route","exact","path","render","components_Filter","components_PalettesList","filterMe","components_PaletteDetail","ReactDOM","HashRouter","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.31482f56.chunk.js","sourcesContent":["import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  render() {\n    return (\n      <div className=\"filter\">\n        <input type=\"text\" onKeyUp={this.props.action}/>\n      </div>\n    );\n  }\n}\n\nFilter.propTypes = {\n  action: PropTypes.func.isRequired\n};\n\nexport default Filter;","import React, {Component} from \"react\";\nimport PropTypes from 'prop-types';\n\nclass PaletteCard extends Component {\n  render() {\n    const {name, colors} = this.props;\n    return (\n      <div className=\"card\">\n        <h2 className=\"card__name\">{name}</h2>\n        <ul className=\"card__colors\">\n          {colors.map((color, index)=>{\n            return (\n              <li className=\"card__color\" style={{'backgroundColor': `#${color}`}} key={index}></li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n}\n\nPaletteCard.propTypes = {\n  name: PropTypes.string.isRequired,\n  colors: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default PaletteCard;","import React, {Component} from \"react\";\nimport PaletteCard from './PaletteCard';\nimport {Link} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nclass PalettesList extends Component {\n  render() {\n    return (\n      <ul className=\"app__list\">\n          {this.props.myPalettes.map(item => {\n            return (\n              <li className=\"app__list-item\" key={item.id}>\n                <Link to={`/palette/${item.id}`}>\n                <PaletteCard name={item.name} colors={item.colors} />\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n    );\n  }\n}\n\nPalettesList.propTypes = {\n  myPalettes: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n\nexport default PalettesList;","import React, {Component, Fragment} from \"react\";\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\n\nclass PaletteDetail extends Component {\n\n  render() {\n    const {myPalettes} = this.props;\n\n    const paletteId = this.props.match.params.id;\n\n    if (myPalettes.length > 0 && paletteId < myPalettes.length)  {\n      const palette = myPalettes[paletteId];\n\n\n      const {name, colors} = palette;\n      return (\n        <div className=\"card\">\n          <h2 className=\"card__name\">{name}</h2>\n          <ul className=\"card__colors\">\n            {colors.map((color, index)=>{\n              return (\n                <li className=\"card__color\" style={{'backgroundColor': `#${color}`}} key={index}></li>\n              );\n            })}\n          </ul>\n          <Link to=\"/\">Volver</Link>\n        </div>\n      );\n\n    } else {\n      return (\n        <Fragment>\n          <p>Chato, no tenemos datos :(</p>\n          <Link to=\"/\">Volver</Link>\n        </Fragment>\n        );\n    }\n    \n    \n  }\n}\n\n\n\nexport default PaletteDetail;","import React, { Component, Fragment } from 'react';\nimport {fetchPalettes} from './services/palettesService';\nimport Filter from './components/Filter';\nimport PalettesList from './components/PalettesList';\nimport PaletteDetail from './components/PaletteDetail';\nimport {Switch, Route} from 'react-router-dom';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      nameFilter: '',\n      palettes: []\n    };\n\n    this.getNameFilter = this.getNameFilter.bind(this);\n  }\n\n  componentDidMount() {\n    this.getSavedPalettes();\n  }\n\n  getNameFilter(e) {\n    const query = e.currentTarget.value;\n    this.setState({\n      nameFilter: query\n    })\n  }\n\n  getSavedPalettes() {\n    if (localStorage.getItem('savedPalettes') !== null) {\n      const mySavedPalettes = JSON.parse(localStorage.getItem('savedPalettes'));\n      this.setState({\n        palettes: mySavedPalettes\n      });\n    } else {\n      // pedir los datos\n      this.getPalettes();\n    }\n\n  }\n  \n  savePalettes(data,dataName) {\n    localStorage.setItem(dataName, JSON.stringify(data));\n  }\n\n  getPalettes() {\n    fetchPalettes()\n      .then(data => {\n\n        const newPalettes = data.palettes.map((item, index)=>{\n          return {...item, id: index};\n        });\n        this.savePalettes(newPalettes, 'savedPalettes');\n        this.setState({\n          palettes: newPalettes\n        });\n      });\n  }\n\n  filterMe() {\n    const {palettes, nameFilter} = this.state;\n\n    return palettes.filter(item => item.name.toUpperCase().includes(nameFilter.toUpperCase()));\n  }\n\n  render() {\n    \n    return (\n      <div className=\"app\">\n\n        <Switch>\n          <Route exact path=\"/\" render={()=>(\n            <Fragment>\n              <Filter action={this.getNameFilter} />\n\n              <PalettesList myPalettes={this.filterMe()} />\n            </Fragment>\n          )} />\n          <Route path=\"/palette/:id\" render={props => <PaletteDetail match={props.match} myPalettes={this.state.palettes} />} />\n        </Switch>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://raw.githubusercontent.com/Adalab/Easley-ejercicios-de-fin-de-semana/master/data/palettes.json';\n\nconst fetchPalettes = () => fetch(ENDPOINT).then(res => res.json());\n\nexport {fetchPalettes};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter} from 'react-router-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'));\n"],"sourceRoot":""}